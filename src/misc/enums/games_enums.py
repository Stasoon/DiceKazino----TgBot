from enum import IntEnum, Enum
from typing import Final


EvenUnevenCoefficients: Final = {
    "A": 1.5,
    "B": 1.5,
    "C": 1.5,
    "D": 1.5,
    "E": 2.5,
    "F": 2.5,
    "G": 5,
    "H": 5
}


class BaccaratBettingOption(IntEnum):
    PLAYER = 1
    TIE = 2
    BANKER = 3


class GameCategory(str, Enum):
    BASIC = '–ò–≥—Ä—ã'
    BLACKJACK = 'BlackJack'
    BACCARAT = 'Baccarat'


class GameType(str, Enum):
    """–≠–º–æ–¥–∑–∏ —Å —Ç–∏–ø–æ–º –∏–≥—Ä—ã"""
    DICE = 'üé≤'
    CASINO = 'üé∞'
    DARTS = 'üéØ'
    BOWLING = 'üé≥'
    BASKETBALL = 'üèÄ'
    FOOTBALL = '‚öΩ'
    BJ = '‚ô†'
    BACCARAT = 'üé¥'

    def get_full_name(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –ø–æ–ª–Ω—ã–º –∏–º–µ–Ω–µ–º –∏–≥—Ä—ã"""
        match self:
            case GameType.DICE: return "–ö–æ—Å—Ç–∏"
            case GameType.CASINO: return "–°–ª–æ—Ç—ã"
            case GameType.DARTS: return "–î–∞—Ä—Ç—Å"
            case GameType.BOWLING: return "–ë–æ—É–ª–∏–Ω–≥"
            case GameType.BASKETBALL: return "–ë–∞—Å–∫–µ—Ç–±–æ–ª"
            case GameType.FOOTBALL: return "–§—É—Ç–±–æ–ª"
            case GameType.BJ: return 'BlackJack'
            case GameType.BACCARAT: return '–ë–∞–∫–∫–∞—Ä–∞—Ç'
            case _: return "–ò–≥—Ä–∞"


class GameStatus(IntEnum):
    CANCELED = -1
    WAIT_FOR_PLAYERS = 0
    ACTIVE = 1
    FINISHED = 2
