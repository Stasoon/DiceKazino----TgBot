import random

from .creatable_game_messages_base import CreatableGamesMessages
from .game_messages_base import BotGamesMessagesBase


class BasketballMessages(BotGamesMessagesBase, CreatableGamesMessages):

    @staticmethod
    def get_game_created(game_number: int):
        texts = (
            'Супер, матч №{game_number} создан! Подожди, пока кто-то другой решит с тобой потягаться.',
            'Матч №{game_number} создан! Теперь подождем твоего соперника, он скоро присоединится к матчу.',
            'Игра №{game_number} создана! Будь уверен в себе, а то твои дрожащие руки не вселяют страх в соперника)',
            'Супер, матч №{game_number} создан! Баскетбольный мяч уже у тебя в руках. Ты ожидаешь своего соперника',
            'Отлично, матч №{game_number} создан! Только ты, мяч и кольцо...',
            'Матч №{game_number} создан. Пока ты ждешь соперника, в мыслях ты уже представляешь, куда потратишь деньги с выигрыша.',
        )
        return random.choice(texts).format(game_number)

    @staticmethod
    def get_category_description(player_name: str) -> str:
        texts = (
            'Стук мяча о паркет, скрип кросовок... Да, ты на баскетбольной площадке.',
            'Добро пожаловать на баскетбольную площадку! Уверен в своем броске? Тогда ты в верном месте.',
            'Ты слышишь этот сладкий звук попадания мяча в сетку кольца. Верно, ты на баскетбольной площадке.',
            'DICY: Ну что, новый Майкл Джордан, готов закидывать трёхочковые? Сейчас это проверим.',
            'DICY: Думаешь, сможешь составить другим игрокам конкуренцию? Ты до кольца то докинешь?',
            'DICY: Готов поспорить на то, что и одного броска не закинешь! Ради интереса, так уж и быть, выйди на площадку.',
        )
        return random.choice(texts)

    @staticmethod
    def ask_for_bet_amount(player_name: str) -> str:
        texts = (
            'Просто скажи, сколько готов поставить.',
            'Сколько будешь ставить на свою победу?',
            '"У нас новый игрок!" — кричит один из парней на площадке. \nНасколько уверен в своей победе? Напиши свою ставку.',
        )
        return random.choice(texts)

    @staticmethod
    def get_game_started():
        return 'Бросай мяч!'

    @staticmethod
    def get_tie():
        texts = (
            'Ты и твой соперник набрали одинаковое количество очков. Ставки возвращены.',
            'В ходе этой игры не выявился победитель — Ничья!',
            'Оба игрока одинаково бросили мяч, — объявляется на площадке. \nТы не забрал ставку соперника, но и свою не потерял.',
            'DICY: В этот раз на площадке столкнулись равные соперники, Всем респект!',
            'DICY: Нет, ну так неинтересно! Мне нужен победитель!',
            'DICY: Публика жаждет победителя! Скорее играй снова!',
        )
        return random.choice(texts)

    @staticmethod
    def get_player_won(player_name: str = "Игрок", win_amount: float = 0):
        texts = (
            'ПО-БЕ-ДА! Ты настоящий баскетболист!',
            'А вот и наш победитель! — объявляют на площадке и показывают на тебя.',
            'BOOM! Ты победил! Аплодисменты, софиты! Чувствуешь себя королём.',
            'DICY: В этот раз ты победил, но это тебе не даёт никакого права считать себя победителем по жизни.',
            'DICY: А вот это уже интересно, давно таких классных бросков не видел, молодец!',
            'DICY: Нет, ну ты видел! Ха-ха-ха-ха! Даже слепой бы не проиграл.',
        )
        return random.choice(texts)

    @staticmethod
    def get_player_loose():
        texts = (
            'В это раз не повезло, бросок соперника оказался лучше.',
            'Твой соперник оказался сильнее.',
            'DICY: Ха! Ты проиграл, а твой соперник выиграл! Может повезет в следующей жизни.',
            'DICY: Оу, ну тебе просто не повезло, в следующий раз всё точно получится!',
            'DICY: А вот и сыграла моя ставка на твоё поражение, спасибо тебе)',
        )
        return random.choice(texts)
