import html
from decimal import Decimal

from settings import Config
from src.database.models import Band, User
from src.misc.enums.leagues import BandLeague
from src.utils.text_utils import format_float_to_rub_string


def get_member_link(member: User):
    if member.telegram_id:
        return f"<a href='tg://user?id={member.telegram_id}'>{html.escape(member.name)}</a>"
    else:
        return html.escape(member.name)


class BandsMessages:

    @staticmethod
    def get_bands_menu() -> str:
        return '–ú–µ–Ω—é –±–∞–Ω–¥'

    @staticmethod
    def get_league_name(league: BandLeague) -> str:
        match league:
            case BandLeague.CROOKS:
                return '–ñ—É–ª–∏–∫–∏'
            case BandLeague.GAMBLERS:
                return '–ö–∞—Ä—Ç—ë–∂–Ω–∏–∫–∏'
            case BandLeague.CARD_MASTERS:
                return '–ú–∞—Å—Ç–µ—Ä–∞ –∫–∞—Ä—Ç'
            case BandLeague.BUSINESSMEN:
                return '–ë–∏–∑–Ω–µ—Å–º–µ–Ω—ã'
            case BandLeague.INDUSTRIALISTS:
                return '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∏'
            case BandLeague.TYCOONS:
                return '–ú–∞–≥–Ω–∞—Ç—ã'
            case BandLeague.MONOPOLISTS:
                return '–ú–æ–Ω–æ–ø–æ–ª–∏—Å—Ç—ã'

    @classmethod
    def get_band_description(cls, band: Band, band_creator: User, members_scores: list[tuple[User, float | Decimal]]) -> str:
        members_text = f'ü´Ç –£—á–∞—Å—Ç–Ω–∏–∫–∏: ({len(members_scores)}/{Config.Bands.BAND_MEMBERS_LIMIT})'
        members_list = "\n".join(
            f"{n}) {member[0]} ‚Äî {format_float_to_rub_string(member[1])}"
            for n, member in enumerate(members_scores, start=1)
        )

        return (
            f'<b>–ë–∞–Ω–¥–∞ "{band.title}"</b> \n\n'
            f'üëë –ì–ª–∞–≤–∞—Ä—å: {band_creator} \n'
            f'üìà –†–∞–Ω–≥: {cls.get_league_name(band.league)} \n'
            f'üí∞ –û–±—â–∞–∫: {format_float_to_rub_string(band.score)} \n\n'
            f'{members_text} \n{members_list}'
        )

    @classmethod
    def get_ask_for_join_band(cls, band: Band, band_creator: User, band_members: list[User]) -> str:
        band_description = cls.get_band_description(band=band, band_creator=band_creator, band_members=band_members)
        return f'–•–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ —ç—Ç—É –±–∞–Ω–¥—É? \n\n{band_description}'

    @staticmethod
    def ask_for_member_to_kick() -> str:
        return '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç—å:'
